{"version":3,"sources":["redux/search/reducers.ts","redux/search/actions.ts","components/SearchBar/styles.ts","components/SearchBar/SearchInput.tsx","components/SearchBar/SearchBar.tsx","redux/search/selectors.ts","pages/Details/Details.tsx","pages/Home/Octocat.png","pages/Home/Home.tsx","components/SortDropdown/SortDropdown.tsx","pages/Results/Loader.tsx","components/LanguageFilter/LanguageFilter.tsx","components/ResultsCard/ResultsCard.tsx","pages/Results/Results.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["searchSlice","createSlice","name","initialState","query","q","loading","results","totalCount","items","hasErrors","reducers","getResults","state","action","payload","getResultsSuccess","getResultsFailure","actions","transformParams","params","language","queryString","stringify","languageString","reduce","acc","curr","queryParam","newParams","fetchResults","queryParams","dispatch","a","transformedParams","fetch","response","json","data","console","log","useSearchInputStyles","makeStyles","search","backgroundColor","SearchInput","location","useLocation","parsed","parse","useState","queryValue","setQueryValue","useDispatch","history","useHistory","searchClass","useEffect","pathname","onSubmit","e","preventDefault","searchQuery","target","value","push","className","InputBase","placeholder","inputProps","onChange","SearchBar","AppBar","position","style","Toolbar","Typography","flexGrow","variant","to","color","textDecoration","getSearch","createSelector","getSearchResults","getQuery","searchState","getIsLoading","Details","id","result","useSelector","find","toString","Item","label","ListItem","ListItemText","primary","secondary","Grid","container","item","xs","md","newObject","getQueryString","List","description","stargazers_count","owner","login","Home","fontWeight","src","OctoCat","alt","width","height","SortDropdown","sort","sortValue","setSortValue","display","alignItems","justifyContent","marginRight","Select","event","MenuItem","Loader","direction","marginBottom","CircularProgress","languages","LanguageFilter","filterValues","setFilterValues","FormControl","InputLabel","htmlFor","minWidth","multiple","renderValue","join","map","ListItemIcon","Checkbox","checked","indexOf","Button","marginLeft","onClick","length","useResultsCardStyles","root","padding","transition","boxShadow","detailsLink","subHead","ResultsCard","linkPath","Paper","elevation","justify","Results","parsedQueryParams","isLoading","useResults","spacing","sm","lg","Routes","Container","paddingTop","path","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","searchReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf72e828.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const searchSlice = createSlice({\n\tname: 'search',\n\tinitialState: {\n\t\tquery: { q: '' },\n\t\tloading: false,\n\t\tresults: {\n\t\t\ttotalCount: 0,\n\t\t\titems: [],\n\t\t},\n\t\thasErrors: false,\n\t},\n\treducers: {\n\t\tgetResults: (state, action) => {\n\t\t\tstate.query = action.payload\n\t\t\tstate.loading = true\n\t\t\tstate.hasErrors = false\n\t\t},\n\t\tgetResultsSuccess: (state, action) => {\n\t\t\tstate.results = action.payload\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = false\n\t\t},\n\t\tgetResultsFailure: (state) => {\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = true\n\t\t},\n\t},\n})\n\n// Action creators are generated for each case reducer function\nexport const { getResults, getResultsFailure, getResultsSuccess } =\n\tsearchSlice.actions\n\nexport default searchSlice.reducer\n","import { getResults, getResultsFailure, getResultsSuccess } from './reducers'\nimport queryString from 'query-string'\n\nconst transformParams = (params: any) => {\n\tif (!params.language) return queryString.stringify(params)\n\n\tconst languageString =\n\t\ttypeof params.language === 'string'\n\t\t\t? `+language:${params.language}`\n\t\t\t: params.language.reduce((acc: string, curr: string) => {\n\t\t\t\t\treturn `${acc}+language:${curr}`\n\t\t\t  }, '')\n\n\tconst queryParam = `&q=${params.q}`\n\tlet newParams = params\n\tdelete newParams.q\n\tdelete newParams.language\n\treturn `${queryString.stringify(newParams)}${queryParam}${languageString}`\n}\n\nexport const fetchResults = (queryParams?: any) => {\n\treturn async (dispatch: any) => {\n\t\tdispatch(getResults({ ...queryParams }))\n\n\t\tconst transformedParams = transformParams(queryParams)\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://api.github.com/search/repositories?${transformedParams}`\n\t\t\t)\n\t\t\tconst data = await response.json()\n\t\t\tconsole.log('search action results: ', data)\n\t\t\tdispatch(getResultsSuccess(data))\n\t\t} catch (error) {\n\t\t\tdispatch(getResultsFailure())\n\t\t}\n\t}\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const useSearchInputStyles = makeStyles(\n\t{\n\t\tsearch: {\n\t\t\tbackgroundColor: 'white',\n\t\t},\n\t},\n\t{ name: 'SearchInput' }\n)\n","import { InputBase } from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router'\nimport { fetchResults } from '../../redux/search/actions'\nimport { useSearchInputStyles } from './styles'\nimport queryString from 'query-string'\n\nexport const SearchInput = () => {\n\tconst location = useLocation()\n\tconst parsed = queryString.parse(location.search)\n\tconst [queryValue, setQueryValue] = useState(parsed.q || '')\n\tconst dispatch = useDispatch()\n\tconst history = useHistory()\n\tconst { search: searchClass } = useSearchInputStyles()\n\n\t// Reset Input when going Home\n\tuseEffect(() => {\n\t\tif (location.pathname === '/') {\n\t\t\tsetQueryValue('')\n\t\t}\n\t}, [location])\n\n\t// Submit Search\n\tconst handleSubmit = (e: React.SyntheticEvent): void => {\n\t\te.preventDefault()\n\t\tconst target = e.target as typeof e.target & {\n\t\t\tsearchQuery: { value: string }\n\t\t}\n\t\tconst searchQuery = target.searchQuery.value\n\n\t\tdispatch(fetchResults({ q: searchQuery }))\n\t\thistory.push(`/results?q=${searchQuery}`)\n\t}\n\n\t// Change Input Value\n\tconst handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\tsetQueryValue(e.target.value)\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div className={searchClass}>\n\t\t\t\t<InputBase\n\t\t\t\t\tplaceholder='Search…'\n\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\tname='searchQuery'\n\t\t\t\t\tvalue={queryValue}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n","import { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { SearchInput } from './SearchInput'\n\nexport const SearchBar = () => (\n\t<AppBar position='static' style={{ backgroundColor: '#6f42c1' }}>\n\t\t<Toolbar>\n\t\t\t<Typography style={{ flexGrow: 1 }} variant='h6'>\n\t\t\t\t<Link to='/' style={{ color: 'white', textDecoration: 'none' }}>\n\t\t\t\t\tGithub Search\n\t\t\t\t</Link>\n\t\t\t</Typography>\n\n\t\t\t<SearchInput />\n\t\t</Toolbar>\n\t</AppBar>\n)\n","import { createSelector } from 'reselect'\n\nconst getSearch = createSelector(\n\t(state) => state,\n\t(state: any) => state.search\n)\n\nconst getResults = createSelector(getSearch, (search) => search.results)\n\nexport const getSearchResults = createSelector(\n\tgetResults,\n\t(results) => results.items\n)\n\nexport const getResultById = (id: any) => {\n\treturn createSelector(getSearchResults, (results) =>\n\t\tresults.find((result: any) => result.id.toString() === id.toString())\n\t)\n}\n\nexport const getQuery = createSelector(\n\tgetSearch,\n\t(searchState) => searchState.query\n)\n\nexport const getIsLoading = createSelector(\n\tgetSearch,\n\t(searchState) => searchState.loading\n)\n","import { useLocation } from 'react-router'\nimport queryString from 'query-string'\nimport { useSelector } from 'react-redux'\nimport { getResultById } from '../../redux/search/selectors'\nimport { Grid, List, ListItem, ListItemText } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nexport const Details = () => {\n\tconst location = useLocation()\n\tconst parsed = queryString.parse(location.search)\n\tconst result = useSelector(getResultById(parsed.id))\n\tconst getQueryString = () => {\n\t\tlet newObject = parsed\n\t\tdelete newObject.id\n\t\treturn queryString.stringify(newObject)\n\t}\n\tif (!result) return <div>No details found</div>\n\n\tconst Item = ({ label, value }: { label: string; value: string }) => (\n\t\t<ListItem>\n\t\t\t<ListItemText primary={value} secondary={label} />\n\t\t</ListItem>\n\t)\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t<Link to={`/results?${getQueryString()}`}>{`< Back to Results`}</Link>\n\t\t\t\t<List>\n\t\t\t\t\t<Item label={'Repository Name'} value={result.name} />\n\t\t\t\t\t<Item label={'Description'} value={result.description} />\n\t\t\t\t\t<Item label={'# of Stars'} value={result.stargazers_count} />\n\t\t\t\t\t<Item label={'Language'} value={result.language} />\n\t\t\t\t\t<Item label={'Owner'} value={result.owner.login} />\n\t\t\t\t</List>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","export default __webpack_public_path__ + \"static/media/Octocat.237e2214.png\";","import { Grid, Typography } from '@material-ui/core'\nimport OctoCat from './Octocat.png'\n\nexport const Home = () => {\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12} md={7}>\n\t\t\t\t<Typography variant='h1'>\n\t\t\t\t\tSearch{' '}\n\t\t\t\t\t<span style={{ color: '#6f42c1', fontWeight: 'bold' }}>\n\t\t\t\t\t\tGithub Repositories\n\t\t\t\t\t</span>{' '}\n\t\t\t\t\tquickly with the click of a button\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={5}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={OctoCat}\n\t\t\t\t\talt='octocat'\n\t\t\t\t\tstyle={{ width: '100%', height: 'auto' }}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { MenuItem, Select, Typography } from '@material-ui/core'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router'\nimport { fetchResults } from '../../redux/search/actions'\nimport { getQuery } from '../../redux/search/selectors'\nimport queryString from 'query-string'\n\nexport const SortDropdown = () => {\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\tconst location = useLocation()\n\tconst parsed = queryString.parse(location.search)\n\tconst query = useSelector(getQuery)\n\tconst [sortValue, setSortValue] = useState(query.sort || 'best-match')\n\tconst handleSortChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n\t\tsetSortValue(event.target.value as string)\n\t\tlet newParams\n\t\tif (event.target.value === 'stars') {\n\t\t\tnewParams = {\n\t\t\t\t...parsed,\n\t\t\t\tsort: 'stars',\n\t\t\t}\n\t\t\thistory.push(`/results?${queryString.stringify(newParams)}`)\n\t\t\tdispatch(fetchResults(newParams))\n\t\t} else {\n\t\t\tnewParams = parsed\n\t\t\tdelete newParams.sort\n\t\t\thistory.push(`/results?${queryString.stringify(newParams)}`)\n\t\t\tdispatch(fetchResults(newParams))\n\t\t}\n\t}\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t}}\n\t\t>\n\t\t\t<Typography style={{ marginRight: '5px' }}>Sort: </Typography>\n\t\t\t<Select id='sort-select' value={sortValue} onChange={handleSortChange}>\n\t\t\t\t<MenuItem value='best-match'>Best Match</MenuItem>\n\t\t\t\t<MenuItem value='stars'>Stars</MenuItem>\n\t\t\t</Select>\n\t\t</div>\n\t)\n}\n","import { CircularProgress, Grid } from '@material-ui/core'\n\nexport const Loader = () => {\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t\tmd={12}\n\t\t\t\talignItems='center'\n\t\t\t\tdirection='column'\n\t\t\t>\n\t\t\t\t<div style={{ marginBottom: '30px' }}>Results Loading. Please Wait</div>\n\t\t\t\t<CircularProgress />\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import {\n\tButton,\n\tCheckbox,\n\tFormControl,\n\tInputLabel,\n\tListItemIcon,\n\tListItemText,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core'\nimport { useState } from 'react'\nimport queryString from 'query-string'\nimport { useHistory, useLocation } from 'react-router'\nimport { fetchResults } from '../../redux/search/actions'\nimport { useDispatch } from 'react-redux'\n\nconst languages = [\n\t'Go',\n\t'Java',\n\t'JavaScript',\n\t'TypeScript',\n\t'Python',\n\t'Ruby',\n\t'Rust',\n\t'Scala',\n]\n\nconst getInitialFilterValue = (params: any) => {\n\tif (!params.language) return []\n\tif (typeof params.language === 'string') return [params.language]\n\treturn params.language\n}\n\nexport const LanguageFilter = () => {\n\tconst location = useLocation()\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\tconst parsed = queryString.parse(location.search)\n\tconst [filterValues, setFilterValues] = useState<string[]>(\n\t\tgetInitialFilterValue(parsed)\n\t)\n\n\tconst handleChange = (e: any) => {\n\t\tsetFilterValues(e.target.value)\n\t}\n\n\tconst handleApplyFilter = () => {\n\t\tlet newParams\n\t\tif (filterValues.length === 0) {\n\t\t\tnewParams = parsed\n\t\t\tdelete newParams.language\n\t\t} else {\n\t\t\tnewParams = {\n\t\t\t\t...parsed,\n\t\t\t\tlanguage: filterValues,\n\t\t\t}\n\t\t}\n\t\thistory.push(`/results?${queryString.stringify(newParams)}`)\n\t\tdispatch(fetchResults(newParams))\n\t}\n\n\treturn (\n\t\t<div style={{ display: 'flex', alignItems: 'flex-end' }}>\n\t\t\t<FormControl>\n\t\t\t\t<InputLabel htmlFor='language-filter-select'>\n\t\t\t\t\tChoose Language(s)\n\t\t\t\t</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tstyle={{ minWidth: '190px' }}\n\t\t\t\t\tid='language-filter-select'\n\t\t\t\t\tvalue={filterValues}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tmultiple\n\t\t\t\t\trenderValue={(filterValues) => (filterValues as string[]).join(', ')}\n\t\t\t\t>\n\t\t\t\t\t{languages.map((language: string) => (\n\t\t\t\t\t\t<MenuItem key={language} value={language}>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Checkbox checked={filterValues.indexOf(language) > -1} />\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={language} />\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t\t<Button\n\t\t\t\tvariant='contained'\n\t\t\t\tcolor='primary'\n\t\t\t\tstyle={{ marginLeft: '20px' }}\n\t\t\t\tonClick={handleApplyFilter}\n\t\t\t>\n\t\t\t\tApply Filter\n\t\t\t</Button>\n\t\t</div>\n\t)\n}\n","import { Button, Grid, Paper, Typography } from '@material-ui/core'\nimport { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\n\nexport const useResultsCardStyles = makeStyles(\n\t{\n\t\troot: {\n\t\t\tpadding: '20px',\n\t\t\ttransition: '0.4s',\n\t\t\t'&:hover': {\n\t\t\t\tboxShadow: '1px 1px 8px 2px #6f42c1',\n\t\t\t},\n\t\t\theight: '250px',\n\t\t},\n\t\tdetailsLink: {\n\t\t\ttextDecoration: 'none',\n\t\t},\n\n\t\tsubHead: {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'space-between',\n\t\t\talignItems: 'center',\n\t\t},\n\t},\n\t{ name: 'ResultsCard' }\n)\n\ninterface Props {\n\tresult: {\n\t\tname: string\n\t\tstargazers_count: string\n\t\tlanguage: string\n\t\towner: { login: string }\n\t}\n\tlinkPath: string\n}\n\nexport const ResultsCard: FC<Props> = ({ result, linkPath }) => {\n\tconst { root, detailsLink, subHead } = useResultsCardStyles()\n\treturn (\n\t\t<Paper elevation={3} className={root}>\n\t\t\t<Grid container style={{ height: '100%' }}>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection='column'\n\t\t\t\t\tstyle={{ marginBottom: 'auto' }}\n\t\t\t\t>\n\t\t\t\t\t<Typography variant='h6'>{`${result.name}`}</Typography>\n\t\t\t\t\t<div className={subHead}>\n\t\t\t\t\t\t<Typography variant='caption'>{`${result.owner.login}`}</Typography>\n\t\t\t\t\t\t<Typography>{`${result.language}`}</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item container justify='space-between' alignItems='center'>\n\t\t\t\t\t<Typography style={{ display: 'flex' }}>\n\t\t\t\t\t\t<StarBorderIcon style={{ marginRight: '5px' }} />{' '}\n\t\t\t\t\t\t{result.stargazers_count}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button variant='outlined' color='primary'>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName={detailsLink}\n\t\t\t\t\t\t\tto={linkPath}\n\t\t\t\t\t\t>{`More Details >`}</Link>\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t)\n}\n","import { Grid } from '@material-ui/core'\nimport { useEffect } from 'react'\nimport queryString from 'query-string'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { fetchResults } from '../../redux/search/actions'\nimport {\n\tgetSearchResults,\n\tgetQuery,\n\tgetIsLoading,\n} from '../../redux/search/selectors'\nimport { SortDropdown } from '../../components/SortDropdown/SortDropdown'\nimport { Loader } from './Loader'\nimport { LanguageFilter } from '../../components/LanguageFilter/LanguageFilter'\nimport { ResultsCard } from '../../components/ResultsCard/ResultsCard'\n\nexport const useResults = () => {\n\tconst location = useLocation()\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\tconst parsedQueryParams = queryString.parse(location.search)\n\tconst isLoading = useSelector(getIsLoading)\n\n\tuseEffect(() => {\n\t\tif (!parsedQueryParams.q) {\n\t\t\thistory.push('/')\n\t\t} else if (!isLoading) {\n\t\t\tdispatch(fetchResults(parsedQueryParams))\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn { parsedQueryParams, isLoading }\n}\n\nexport const Results = () => {\n\tconst { parsedQueryParams, isLoading } = useResults()\n\tconst results = useSelector(getSearchResults)\n\tconst query = useSelector(getQuery)\n\n\tif (isLoading) {\n\t\treturn <Loader />\n\t}\n\n\tif (!results || results === []) {\n\t\treturn <div>No Results Found</div>\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>{`Showing results for: ${query.q}`}</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\talignItems: 'flex-end',\n\t\t\t\t\tmarginBottom: '10px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<LanguageFilter />\n\t\t\t\t<SortDropdown />\n\t\t\t</div>\n\t\t\t<Grid container spacing={2} alignItems='center'>\n\t\t\t\t{results.map((result: any) => (\n\t\t\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} key={result.id}>\n\t\t\t\t\t\t<ResultsCard\n\t\t\t\t\t\t\tresult={result}\n\t\t\t\t\t\t\tlinkPath={`/details?id=${result.id}&${queryString.stringify(\n\t\t\t\t\t\t\t\tparsedQueryParams\n\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n","import { Container } from '@material-ui/core'\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom'\nimport { SearchBar } from './components/SearchBar/SearchBar'\nimport { Details } from './pages/Details/Details'\nimport { Home } from './pages/Home/Home'\nimport { Results } from './pages/Results/Results'\n\nexport const Routes = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<SearchBar />\n\t\t\t<Container style={{ paddingTop: '20px' }}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/results'>\n\t\t\t\t\t\t<Results />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/details'>\n\t\t\t\t\t\t<Details />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</Router>\n\t)\n}\n","import { CssBaseline } from '@material-ui/core'\nimport { Routes } from './Routes'\n\nexport const App = () => {\n\treturn (\n\t\t<>\n\t\t\t<CssBaseline />\n\t\t\t<Routes />\n\t\t</>\n\t)\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import { configureStore } from '@reduxjs/toolkit'\nimport searchReducer from './search/reducers'\n\nexport const store = configureStore({\n\treducer: {\n\t\tsearch: searchReducer,\n\t},\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}